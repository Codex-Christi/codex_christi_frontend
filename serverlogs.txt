#0 building with "default" instance using docker driver

#1 [app_build internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.56kB done
#1 DONE 0.0s

#2 [app_build internal] load metadata for docker.io/library/node:20.16.0-bookworm-slim
#2 DONE 0.6s

#3 [app_build internal] load .dockerignore
#3 transferring context: 598B done
#3 DONE 0.0s

#4 [app_build base 1/1] FROM docker.io/library/node:20.16.0-bookworm-slim@sha256:2d4585684de1a8483b91ed507cefb6270e8e0f3feff1a2d586e95d3e13c1af39
#4 DONE 0.0s

#5 [app_build internal] load build context
#5 transferring context: 34.80MB 0.2s done
#5 DONE 0.2s

#6 [app_build production 5/8] RUN mkdir -p /app/.next && chown -R nextjs:nodejs /app
#6 CACHED

#7 [app_build production 3/8] RUN useradd --uid 1001 --create-home --shell /bin/bash --groups "nodejs" "nextjs"
#7 CACHED

#8 [app_build production 2/8] RUN groupadd --gid 1001 "nodejs"
#8 CACHED

#9 [app_build deps 3/4] COPY package.json yarn.lock .yarnrc.yml ./
#9 CACHED

#10 [app_build deps 4/4] RUN yarn install --immutable --inline-builds
#10 CACHED

#11 [app_build deps 1/4] RUN corepack enable
#11 CACHED

#12 [app_build production 4/8] WORKDIR /app
#12 CACHED

#13 [app_build deps 2/4] WORKDIR /app
#13 CACHED

#14 [app_build production 6/8] COPY --from=deps --chown=nextjs:nodejs /app/yarn.lock /app/yarn.lock
#14 CACHED

#15 [app_build production 7/8] COPY --chown=nextjs:nodejs . /app/
#15 DONE 0.1s

#16 [app_build production 8/8] RUN yarn install --immutable --inline-builds
#16 0.344 ! Corepack is about to download https://registry.yarnpkg.com/yarn/-/yarn-1.22.22.tgz
#16 0.672 ! The local project doesn't define a 'packageManager' field. Corepack will now add one referencing yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e.
#16 0.672 ! For more details about this field, consult the documentation at https://nodejs.org/api/packages.html#packagemanager
#16 0.672 
#16 0.885 yarn install v1.22.22
#16 0.954 [1/4] Resolving packages...
#16 1.152 [2/4] Fetching packages...
#16 30.22 [3/4] Linking dependencies...
#16 35.59 [4/4] Building fresh packages...
#16 35.70 Done in 34.82s.
#16 DONE 35.8s

#17 [app_build] exporting to image
#17 exporting layers
#17 exporting layers 22.6s done
#17 writing image sha256:13ff906ce0440b056bb3dd6d32cb94e8c9b0071a1d82c92977f526d557de9bdc done
#17 naming to docker.io/library/codexchristi-app_build done
#17 DONE 22.6s

#18 [app_build] resolving provenance for metadata file
#18 DONE 0.0s

#19 [app internal] load build definition from Dockerfile
#19 transferring dockerfile: 1.56kB done
#19 DONE 0.0s

#2 [app internal] load metadata for docker.io/library/node:20.16.0-bookworm-slim
#2 DONE 0.8s

#20 [app internal] load .dockerignore
#20 transferring context: 598B done
#20 DONE 0.0s

#4 [app base 1/1] FROM docker.io/library/node:20.16.0-bookworm-slim@sha256:2d4585684de1a8483b91ed507cefb6270e8e0f3feff1a2d586e95d3e13c1af39
#4 DONE 0.0s

#21 [app internal] load build context
#21 transferring context: 12.06kB 0.0s done
#21 DONE 0.0s

#12 [app production 4/8] WORKDIR /app
#12 CACHED

#22 [app deps 3/4] COPY package.json yarn.lock .yarnrc.yml ./
#22 CACHED

#7 [app production 3/8] RUN useradd --uid 1001 --create-home --shell /bin/bash --groups "nodejs" "nextjs"
#7 CACHED

#8 [app production 2/8] RUN groupadd --gid 1001 "nodejs"
#8 CACHED

#6 [app production 5/8] RUN mkdir -p /app/.next && chown -R nextjs:nodejs /app
#6 CACHED

#13 [app deps 2/4] WORKDIR /app
#13 CACHED

#11 [app deps 1/4] RUN corepack enable
#11 CACHED

#23 [app deps 4/4] RUN yarn install --immutable --inline-builds
#23 CACHED

#24 [app production 6/8] COPY --from=deps --chown=nextjs:nodejs /app/yarn.lock /app/yarn.lock
#24 CACHED

#25 [app production 7/8] COPY --chown=nextjs:nodejs . /app/
#25 DONE 0.2s

#26 [app production 8/8] RUN yarn install --immutable --inline-builds
#26 0.551 ! Corepack is about to download https://registry.yarnpkg.com/yarn/-/yarn-1.22.22.tgz
#26 0.671 ! The local project doesn't define a 'packageManager' field. Corepack will now add one referencing yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e.
#26 0.672 ! For more details about this field, consult the documentation at https://nodejs.org/api/packages.html#packagemanager
#26 0.672 
#26 0.884 yarn install v1.22.22
#26 0.956 [1/4] Resolving packages...
#26 1.193 [2/4] Fetching packages...
#26 30.07 [3/4] Linking dependencies...
#26 35.11 [4/4] Building fresh packages...
#26 35.21 Done in 34.33s.
#26 DONE 35.4s

#27 [app] exporting to image
#27 exporting layers
#27 exporting layers 20.8s done
#27 writing image sha256:25105122c8b1490fb42d0c3167d445299ea625b8a22117003d4433fec8ca517a done
#27 naming to docker.io/library/codexchristi-app done
#27 DONE 20.8s

#28 [app] resolving provenance for metadata file
#28 DONE 0.0s
